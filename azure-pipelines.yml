# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

name: DaneSpiritGOD.Suites  # build numbering format
#resources:
  #containers: [ container ]
  #repositories: [ repository ]
#variables: { string: string } | [ variable ]
trigger: 
- master
pr: 
- master
jobs:
  - job: packNugets
    pool:
      vmImage: 'VS2017-Win2016'

    variables:
      #solution: '**/*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'
      packConfiguration: 'Release'
      srcRoot: './src/'
      nugetSource: 'https://api.nuget.org/v3/index.json'
      corePrj: 'Suites.Core'
      autoMapperPrj: 'Suites.AutoMapper'
      mediatRPrj: 'Suites.MediatR'
      prismPrj: 'Suites.Prism.Wpf.Fx'
      winPrj: 'Suites.WindowsPlatform'
      wpfAppPrj: 'Suites.Wpf.App'
      wpfCorePrj: 'Suites.Wpf.Core'

    steps:
    - task: DotNetCoreInstaller@0
      inputs:
        packageType: 'sdk' # Options: runtime, sdk
        version: '2.1.500'

    - script: dotnet pack -c $(packConfiguration) -o $(Build.ArtifactStagingDirectory) $(srcRoot)$(corePrj)/$(corePrj).csproj

    - script: dotnet nuget push $(Build.ArtifactStagingDirectory)/$(corePrj).nupkg -k $(nuget.key) -s $(nugetSource)

    #- task: NuGetToolInstaller@0

    #- task: NuGetCommand@2
      #inputs:
        #restoreSolution: '$(solution)'

    #- task: VSBuild@1
      #inputs:
        #solution: '$(solution)'
        #platform: '$(buildPlatform)'
        #configuration: '$(buildConfiguration)'

    #- task: VSTest@2
      #inputs:
        #platform: '$(buildPlatform)'
        #configuration: '$(buildConfiguration)'